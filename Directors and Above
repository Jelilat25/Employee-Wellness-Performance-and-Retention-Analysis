{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "68667eba",
   "metadata": {
    "papermill": {
     "duration": 0.004295,
     "end_time": "2024-05-27T16:33:58.082780",
     "exception": false,
     "start_time": "2024-05-27T16:33:58.078485",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# DIRECTORS AND ABOVE ANALYSIS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7165e881",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:58.092387Z",
     "iopub.status.busy": "2024-05-27T16:33:58.091969Z",
     "iopub.status.idle": "2024-05-27T16:33:58.105888Z",
     "shell.execute_reply": "2024-05-27T16:33:58.104754Z"
    },
    "papermill": {
     "duration": 0.021318,
     "end_time": "2024-05-27T16:33:58.108184",
     "exception": false,
     "start_time": "2024-05-27T16:33:58.086866",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['directors']"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List files in the input directory\n",
    "import os;\n",
    "os.listdir ('/kaggle/input/')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f6ccc873",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:58.117863Z",
     "iopub.status.busy": "2024-05-27T16:33:58.117473Z",
     "iopub.status.idle": "2024-05-27T16:33:59.831952Z",
     "shell.execute_reply": "2024-05-27T16:33:59.830792Z"
    },
    "papermill": {
     "duration": 1.72267,
     "end_time": "2024-05-27T16:33:59.834936",
     "exception": false,
     "start_time": "2024-05-27T16:33:58.112266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Read the Excel file into a DataFrame\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "df = pd.read_excel('/kaggle/input/directors/Directors .xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e187d437",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:59.849223Z",
     "iopub.status.busy": "2024-05-27T16:33:59.848676Z",
     "iopub.status.idle": "2024-05-27T16:33:59.892905Z",
     "shell.execute_reply": "2024-05-27T16:33:59.891768Z"
    },
    "papermill": {
     "duration": 0.053384,
     "end_time": "2024-05-27T16:33:59.895311",
     "exception": false,
     "start_time": "2024-05-27T16:33:59.841927",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Employee ID</th>\n",
       "      <th>Employee Status Number</th>\n",
       "      <th>Employee Status</th>\n",
       "      <th>Employee Group</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Hire Date</th>\n",
       "      <th>Tenure Years</th>\n",
       "      <th>Age</th>\n",
       "      <th>Supervisor Employee Number</th>\n",
       "      <th>...</th>\n",
       "      <th>Comparatio</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Career Stream</th>\n",
       "      <th>Direct Reports</th>\n",
       "      <th>Vacation Annual Entitlement</th>\n",
       "      <th>Wellness Used</th>\n",
       "      <th>Wellness Accrued</th>\n",
       "      <th>Vacation  Used</th>\n",
       "      <th>Vacation - Accrued</th>\n",
       "      <th>Leader User Sys ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2001469</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>EVP &amp; Chief Operations Officer</td>\n",
       "      <td>13</td>\n",
       "      <td>2001-01-30</td>\n",
       "      <td>23</td>\n",
       "      <td>59</td>\n",
       "      <td>60000419</td>\n",
       "      <td>...</td>\n",
       "      <td>1.11</td>\n",
       "      <td>Woman</td>\n",
       "      <td>Executive</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10</td>\n",
       "      <td>20.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2006369</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2004559</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>EVP &amp; Chief Information Officer</td>\n",
       "      <td>13</td>\n",
       "      <td>2016-03-21</td>\n",
       "      <td>8</td>\n",
       "      <td>51</td>\n",
       "      <td>60000419</td>\n",
       "      <td>...</td>\n",
       "      <td>1.11</td>\n",
       "      <td>Man</td>\n",
       "      <td>Executive</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10</td>\n",
       "      <td>17.5</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2006369</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>60001995</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>Regional Vice President IGWM Sales</td>\n",
       "      <td>11</td>\n",
       "      <td>1995-08-31</td>\n",
       "      <td>28</td>\n",
       "      <td>51</td>\n",
       "      <td>60001977</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Man</td>\n",
       "      <td>Sales Distribution / Investment Management</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>60001977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2004242</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>Regional Vice President IGWM Sales</td>\n",
       "      <td>11</td>\n",
       "      <td>1992-06-22</td>\n",
       "      <td>31</td>\n",
       "      <td>59</td>\n",
       "      <td>60001977</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Man</td>\n",
       "      <td>Sales Distribution / Investment Management</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10</td>\n",
       "      <td>16.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>60001977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>60001970</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>Regional Vice President IGWM Sales</td>\n",
       "      <td>11</td>\n",
       "      <td>1990-07-16</td>\n",
       "      <td>33</td>\n",
       "      <td>59</td>\n",
       "      <td>60001977</td>\n",
       "      <td>...</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Man</td>\n",
       "      <td>Sales Distribution / Investment Management</td>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10</td>\n",
       "      <td>15.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>60001977</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Employee ID  Employee Status Number Employee Status  Employee Group  \\\n",
       "0      2001469                       1          Active               1   \n",
       "1      2004559                       1          Active               1   \n",
       "2     60001995                       1          Active               1   \n",
       "3      2004242                       1          Active               1   \n",
       "4     60001970                       1          Active               1   \n",
       "\n",
       "                       Position Title  Grade  Hire Date  Tenure Years  Age  \\\n",
       "0      EVP & Chief Operations Officer     13 2001-01-30            23   59   \n",
       "1     EVP & Chief Information Officer     13 2016-03-21             8   51   \n",
       "2  Regional Vice President IGWM Sales     11 1995-08-31            28   51   \n",
       "3  Regional Vice President IGWM Sales     11 1992-06-22            31   59   \n",
       "4  Regional Vice President IGWM Sales     11 1990-07-16            33   59   \n",
       "\n",
       "   Supervisor Employee Number  ... Comparatio Gender  \\\n",
       "0                    60000419  ...       1.11  Woman   \n",
       "1                    60000419  ...       1.11    Man   \n",
       "2                    60001977  ...       0.00    Man   \n",
       "3                    60001977  ...       0.00    Man   \n",
       "4                    60001977  ...       0.00    Man   \n",
       "\n",
       "                                Career Stream  Direct Reports  \\\n",
       "0                                   Executive               6   \n",
       "1                                   Executive               6   \n",
       "2  Sales Distribution / Investment Management               1   \n",
       "3  Sales Distribution / Investment Management               1   \n",
       "4  Sales Distribution / Investment Management               1   \n",
       "\n",
       "  Vacation Annual Entitlement Wellness Used  Wellness Accrued  Vacation  Used  \\\n",
       "0                          25           0.0                10            20.0   \n",
       "1                          25           0.0                10            17.5   \n",
       "2                          25           0.0                10             0.0   \n",
       "3                          25           2.0                10            16.0   \n",
       "4                          25           0.0                10            15.0   \n",
       "\n",
       "   Vacation - Accrued  Leader User Sys ID  \n",
       "0                25.0             2006369  \n",
       "1                25.0             2006369  \n",
       "2                25.0            60001977  \n",
       "3                25.0            60001977  \n",
       "4                25.0            60001977  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display the first few rows of the DataFrame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f596c72b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:59.905788Z",
     "iopub.status.busy": "2024-05-27T16:33:59.905406Z",
     "iopub.status.idle": "2024-05-27T16:33:59.927921Z",
     "shell.execute_reply": "2024-05-27T16:33:59.926843Z"
    },
    "papermill": {
     "duration": 0.030607,
     "end_time": "2024-05-27T16:33:59.930317",
     "exception": false,
     "start_time": "2024-05-27T16:33:59.899710",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Employee ID</th>\n",
       "      <th>Employee Status Number</th>\n",
       "      <th>Employee Status</th>\n",
       "      <th>Employee Group</th>\n",
       "      <th>Position Title</th>\n",
       "      <th>Grade</th>\n",
       "      <th>Hire Date</th>\n",
       "      <th>Tenure Years</th>\n",
       "      <th>Age</th>\n",
       "      <th>Supervisor Employee Number</th>\n",
       "      <th>...</th>\n",
       "      <th>Comparatio</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Career Stream</th>\n",
       "      <th>Direct Reports</th>\n",
       "      <th>Vacation Annual Entitlement</th>\n",
       "      <th>Wellness Used</th>\n",
       "      <th>Wellness Accrued</th>\n",
       "      <th>Vacation  Used</th>\n",
       "      <th>Vacation - Accrued</th>\n",
       "      <th>Leader User Sys ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>606</th>\n",
       "      <td>12150</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>AVP Data Architecture &amp; Analysis</td>\n",
       "      <td>10</td>\n",
       "      <td>2001-09-04</td>\n",
       "      <td>22</td>\n",
       "      <td>60</td>\n",
       "      <td>10017</td>\n",
       "      <td>...</td>\n",
       "      <td>0.96</td>\n",
       "      <td>Woman</td>\n",
       "      <td>Leader</td>\n",
       "      <td>9</td>\n",
       "      <td>25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10</td>\n",
       "      <td>20.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>10017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>607</th>\n",
       "      <td>2006668</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>SVP Architecture, Core Technology &amp; IS</td>\n",
       "      <td>12</td>\n",
       "      <td>2017-08-30</td>\n",
       "      <td>6</td>\n",
       "      <td>52</td>\n",
       "      <td>2004559</td>\n",
       "      <td>...</td>\n",
       "      <td>1.08</td>\n",
       "      <td>Man</td>\n",
       "      <td>Executive</td>\n",
       "      <td>7</td>\n",
       "      <td>25</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10</td>\n",
       "      <td>21.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2004559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>608</th>\n",
       "      <td>60000231</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>VP EPMO &amp; Quality Mgmt</td>\n",
       "      <td>11</td>\n",
       "      <td>2020-04-06</td>\n",
       "      <td>4</td>\n",
       "      <td>50</td>\n",
       "      <td>2004559</td>\n",
       "      <td>...</td>\n",
       "      <td>1.02</td>\n",
       "      <td>Woman</td>\n",
       "      <td>Executive</td>\n",
       "      <td>9</td>\n",
       "      <td>25</td>\n",
       "      <td>4.5</td>\n",
       "      <td>10</td>\n",
       "      <td>16.5</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2004559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>609</th>\n",
       "      <td>2007886</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>VP Digital Technology</td>\n",
       "      <td>11</td>\n",
       "      <td>2018-06-04</td>\n",
       "      <td>5</td>\n",
       "      <td>51</td>\n",
       "      <td>2004559</td>\n",
       "      <td>...</td>\n",
       "      <td>1.25</td>\n",
       "      <td>Man</td>\n",
       "      <td>Executive</td>\n",
       "      <td>10</td>\n",
       "      <td>25</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10</td>\n",
       "      <td>18.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2004559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>10017</td>\n",
       "      <td>1</td>\n",
       "      <td>Active</td>\n",
       "      <td>1</td>\n",
       "      <td>VP Data Office</td>\n",
       "      <td>11</td>\n",
       "      <td>2003-02-07</td>\n",
       "      <td>21</td>\n",
       "      <td>47</td>\n",
       "      <td>2004559</td>\n",
       "      <td>...</td>\n",
       "      <td>1.21</td>\n",
       "      <td>Man</td>\n",
       "      <td>Executive</td>\n",
       "      <td>11</td>\n",
       "      <td>25</td>\n",
       "      <td>1.5</td>\n",
       "      <td>10</td>\n",
       "      <td>23.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>2004559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Employee ID  Employee Status Number Employee Status  Employee Group  \\\n",
       "606        12150                       1          Active               1   \n",
       "607      2006668                       1          Active               1   \n",
       "608     60000231                       1          Active               1   \n",
       "609      2007886                       1          Active               1   \n",
       "610        10017                       1          Active               1   \n",
       "\n",
       "                             Position Title  Grade  Hire Date  Tenure Years  \\\n",
       "606        AVP Data Architecture & Analysis     10 2001-09-04            22   \n",
       "607  SVP Architecture, Core Technology & IS     12 2017-08-30             6   \n",
       "608                  VP EPMO & Quality Mgmt     11 2020-04-06             4   \n",
       "609                   VP Digital Technology     11 2018-06-04             5   \n",
       "610                          VP Data Office     11 2003-02-07            21   \n",
       "\n",
       "     Age  Supervisor Employee Number  ... Comparatio Gender Career Stream  \\\n",
       "606   60                       10017  ...       0.96  Woman        Leader   \n",
       "607   52                     2004559  ...       1.08    Man     Executive   \n",
       "608   50                     2004559  ...       1.02  Woman     Executive   \n",
       "609   51                     2004559  ...       1.25    Man     Executive   \n",
       "610   47                     2004559  ...       1.21    Man     Executive   \n",
       "\n",
       "     Direct Reports Vacation Annual Entitlement Wellness Used  \\\n",
       "606               9                          25           0.0   \n",
       "607               7                          25           2.0   \n",
       "608               9                          25           4.5   \n",
       "609              10                          25           1.0   \n",
       "610              11                          25           1.5   \n",
       "\n",
       "     Wellness Accrued  Vacation  Used  Vacation - Accrued  Leader User Sys ID  \n",
       "606                10            20.0                25.0               10017  \n",
       "607                10            21.0                25.0             2004559  \n",
       "608                10            16.5                25.0             2004559  \n",
       "609                10            18.0                25.0             2004559  \n",
       "610                10            23.0                25.0             2004559  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "16c8fd7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:59.943128Z",
     "iopub.status.busy": "2024-05-27T16:33:59.941925Z",
     "iopub.status.idle": "2024-05-27T16:33:59.951323Z",
     "shell.execute_reply": "2024-05-27T16:33:59.950292Z"
    },
    "papermill": {
     "duration": 0.018374,
     "end_time": "2024-05-27T16:33:59.953601",
     "exception": false,
     "start_time": "2024-05-27T16:33:59.935227",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Employee ID', 'Employee Status Number', 'Employee Status',\n",
       "       'Employee Group', 'Position Title', 'Grade', 'Hire Date',\n",
       "       'Tenure Years', 'Age', 'Supervisor Employee Number', 'Division Name',\n",
       "       'Company Name', 'Location Group', 'Is a People Leader Number',\n",
       "       'Ia a People Leader', 'People Leader's Location', 'Flight Risk',\n",
       "       'Loss Impact', 'Talent Assessment', '2023 Performance Rating',\n",
       "       '01 Explores Broadly and Innovates',\n",
       "       '02 Thinks Critically and Shares Ideas', '03 Understands our Business',\n",
       "       '04 Manages Complexity', '05 Engages and Influences Others',\n",
       "       '06 Attracts, Develops and Retains Talent', '07 Drive for Results',\n",
       "       '08 Optimizes Work Processes', '09 Builds and applies self insight',\n",
       "       '10 Demonstrates resilience and adaptability', 'Leader Same City',\n",
       "       'Comparatio', 'Gender', 'Career Stream', 'Direct Reports',\n",
       "       'Vacation Annual Entitlement', 'Wellness Used', 'Wellness Accrued',\n",
       "       'Vacation  Used', 'Vacation - Accrued', 'Leader User Sys ID'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename columns 'Leader Same City2' to 'Leader Same City' and '09 Builds and applies selfUnratedinsight' to '09 Builds and applies self insight'\n",
    "df = df.rename(columns={\n",
    "    'Leader Same City2': 'Leader Same City',\n",
    "    '09 Builds and applies selfUnratedinsight': '09 Builds and applies self insight'\n",
    "})\n",
    "\n",
    "# Display the column names of the DataFrame\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "96614d4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:33:59.965225Z",
     "iopub.status.busy": "2024-05-27T16:33:59.964765Z",
     "iopub.status.idle": "2024-05-27T16:33:59.989051Z",
     "shell.execute_reply": "2024-05-27T16:33:59.987719Z"
    },
    "papermill": {
     "duration": 0.032936,
     "end_time": "2024-05-27T16:33:59.991487",
     "exception": false,
     "start_time": "2024-05-27T16:33:59.958551",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 611 entries, 0 to 610\n",
      "Data columns (total 41 columns):\n",
      " #   Column                                       Non-Null Count  Dtype         \n",
      "---  ------                                       --------------  -----         \n",
      " 0   Employee ID                                  611 non-null    int64         \n",
      " 1   Employee Status Number                       611 non-null    int64         \n",
      " 2   Employee Status                              611 non-null    object        \n",
      " 3   Employee Group                               611 non-null    int64         \n",
      " 4   Position Title                               611 non-null    object        \n",
      " 5   Grade                                        611 non-null    int64         \n",
      " 6   Hire Date                                    611 non-null    datetime64[ns]\n",
      " 7   Tenure Years                                 611 non-null    int64         \n",
      " 8   Age                                          611 non-null    int64         \n",
      " 9   Supervisor Employee Number                   611 non-null    int64         \n",
      " 10  Division Name                                611 non-null    object        \n",
      " 11  Company Name                                 611 non-null    object        \n",
      " 12  Location Group                               611 non-null    object        \n",
      " 13  Is a People Leader Number                    611 non-null    int64         \n",
      " 14  Ia a People Leader                           611 non-null    object        \n",
      " 15  People Leader's Location                     611 non-null    object        \n",
      " 16  Flight Risk                                  611 non-null    int64         \n",
      " 17  Loss Impact                                  611 non-null    int64         \n",
      " 18  Talent Assessment                            611 non-null    int64         \n",
      " 19  2023 Performance Rating                      611 non-null    int64         \n",
      " 20  01 Explores Broadly and Innovates            611 non-null    int64         \n",
      " 21  02 Thinks Critically and Shares Ideas        611 non-null    int64         \n",
      " 22  03 Understands our Business                  611 non-null    int64         \n",
      " 23  04 Manages Complexity                        611 non-null    int64         \n",
      " 24  05 Engages and Influences Others             611 non-null    int64         \n",
      " 25  06 Attracts, Develops and Retains Talent     611 non-null    int64         \n",
      " 26  07 Drive for Results                         611 non-null    int64         \n",
      " 27  08 Optimizes Work Processes                  611 non-null    int64         \n",
      " 28  09 Builds and applies self insight           611 non-null    int64         \n",
      " 29  10 Demonstrates resilience and adaptability  611 non-null    int64         \n",
      " 30  Leader Same City                             611 non-null    object        \n",
      " 31  Comparatio                                   611 non-null    float64       \n",
      " 32  Gender                                       611 non-null    object        \n",
      " 33  Career Stream                                611 non-null    object        \n",
      " 34  Direct Reports                               611 non-null    int64         \n",
      " 35  Vacation Annual Entitlement                  611 non-null    int64         \n",
      " 36  Wellness Used                                611 non-null    float64       \n",
      " 37  Wellness Accrued                             611 non-null    int64         \n",
      " 38  Vacation  Used                               611 non-null    float64       \n",
      " 39  Vacation - Accrued                           611 non-null    float64       \n",
      " 40  Leader User Sys ID                           611 non-null    int64         \n",
      "dtypes: datetime64[ns](1), float64(4), int64(26), object(10)\n",
      "memory usage: 195.8+ KB\n"
     ]
    }
   ],
   "source": [
    "# Display information about the DataFrame\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "32492b3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:34:00.003798Z",
     "iopub.status.busy": "2024-05-27T16:34:00.002851Z",
     "iopub.status.idle": "2024-05-27T16:34:00.010820Z",
     "shell.execute_reply": "2024-05-27T16:34:00.009557Z"
    },
    "papermill": {
     "duration": 0.017315,
     "end_time": "2024-05-27T16:34:00.013839",
     "exception": false,
     "start_time": "2024-05-27T16:33:59.996524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Employee ID                                    0\n",
      "Employee Status Number                         0\n",
      "Employee Status                                0\n",
      "Employee Group                                 0\n",
      "Position Title                                 0\n",
      "Grade                                          0\n",
      "Hire Date                                      0\n",
      "Tenure Years                                   0\n",
      "Age                                            0\n",
      "Supervisor Employee Number                     0\n",
      "Division Name                                  0\n",
      "Company Name                                   0\n",
      "Location Group                                 0\n",
      "Is a People Leader Number                      0\n",
      "Ia a People Leader                             0\n",
      "People Leader's Location                       0\n",
      "Flight Risk                                    0\n",
      "Loss Impact                                    0\n",
      "Talent Assessment                              0\n",
      "2023 Performance Rating                        0\n",
      "01 Explores Broadly and Innovates              0\n",
      "02 Thinks Critically and Shares Ideas          0\n",
      "03 Understands our Business                    0\n",
      "04 Manages Complexity                          0\n",
      "05 Engages and Influences Others               0\n",
      "06 Attracts, Develops and Retains Talent       0\n",
      "07 Drive for Results                           0\n",
      "08 Optimizes Work Processes                    0\n",
      "09 Builds and applies self insight             0\n",
      "10 Demonstrates resilience and adaptability    0\n",
      "Leader Same City                               0\n",
      "Comparatio                                     0\n",
      "Gender                                         0\n",
      "Career Stream                                  0\n",
      "Direct Reports                                 0\n",
      "Vacation Annual Entitlement                    0\n",
      "Wellness Used                                  0\n",
      "Wellness Accrued                               0\n",
      "Vacation  Used                                 0\n",
      "Vacation - Accrued                             0\n",
      "Leader User Sys ID                             0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check for missing values\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04ffe233",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T15:41:18.891174Z",
     "iopub.status.busy": "2024-05-27T15:41:18.890826Z",
     "iopub.status.idle": "2024-05-27T15:41:21.332937Z",
     "shell.execute_reply": "2024-05-27T15:41:21.331832Z",
     "shell.execute_reply.started": "2024-05-27T15:41:18.891131Z"
    },
    "papermill": {
     "duration": 0.005083,
     "end_time": "2024-05-27T16:34:00.024424",
     "exception": false,
     "start_time": "2024-05-27T16:34:00.019341",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Define the columns for correlation analysis\n",
    "cols_for_corr = df.columns[df.columns.get_loc('01 Explores Broadly and Innovates') : \n",
    "                           df.columns.get_loc('10 Demonstrates resilience and adaptability') + 1]\n",
    "\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Include 'Wellness Used' column in the correlation analysis\n",
    "cols_for_corr = ['Wellness Used'] + list(cols_for_corr)\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Plot the correlation matrix using a heatmap\n",
    "plt.figure(figsize=(14, 12))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
    "plt.title('Correlation Matrix of Wellness Use and Other Variables')\n",
    "plt.show()\n",
    "\n",
    "print(\"Correlation Matrix:\")\n",
    "print(corr_matrix)\n",
    "\n",
    "# Define the file path\n",
    "file_path = \"/kaggle/working/correlation_matrix_1.xlsx\"\n",
    "\n",
    "# Export the correlation matrix to an Excel file in the writable directory\n",
    "corr_matrix.to_excel(file_path)\n",
    "\n",
    "# Check if the file was created successfully\n",
    "if os.path.isfile(file_path):\n",
    "    print(f\"File created successfully: {file_path}\")\n",
    "else:\n",
    "    print(\"File creation failed.\")\n",
    "\n",
    "# List the contents of the /kaggle/working directory to verify\n",
    "print(\"Contents of /kaggle/working directory:\")\n",
    "print(os.listdir(\"/kaggle/working\"))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "efd6cd2e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:34:00.037015Z",
     "iopub.status.busy": "2024-05-27T16:34:00.036150Z",
     "iopub.status.idle": "2024-05-27T16:34:14.271298Z",
     "shell.execute_reply": "2024-05-27T16:34:14.269838Z"
    },
    "papermill": {
     "duration": 14.244531,
     "end_time": "2024-05-27T16:34:14.274115",
     "exception": false,
     "start_time": "2024-05-27T16:34:00.029584",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting xlsxwriter\r\n",
      "  Downloading XlsxWriter-3.2.0-py3-none-any.whl.metadata (2.6 kB)\r\n",
      "Downloading XlsxWriter-3.2.0-py3-none-any.whl (159 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m159.9/159.9 kB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: xlsxwriter\r\n",
      "Successfully installed xlsxwriter-3.2.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install xlsxwriter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "14dedc7d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:34:14.287911Z",
     "iopub.status.busy": "2024-05-27T16:34:14.287459Z",
     "iopub.status.idle": "2024-05-27T16:34:16.252666Z",
     "shell.execute_reply": "2024-05-27T16:34:16.251271Z"
    },
    "papermill": {
     "duration": 1.975189,
     "end_time": "2024-05-27T16:34:16.255188",
     "exception": false,
     "start_time": "2024-05-27T16:34:14.279999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Contents of /kaggle/working directory:\n",
      "['correlation_heatmap.png', 'correlation_with_embedded_heatmap.xlsx', '__notebook__.ipynb']\n",
      "File created successfully: /kaggle/working/correlation_with_embedded_heatmap.xlsx\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import os\n",
    "\n",
    "# Define the columns for correlation analysis\n",
    "cols_for_corr = ['Wellness Used', 'Flight Risk', 'Loss Impact', 'Talent Assessment', \n",
    "                 '2023 Performance Rating', 'Direct Reports']\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Plot the correlation matrix using a heatmap\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
    "plt.title('Correlation Matrix of Wellness Use and Selected Variables')\n",
    "plt.savefig(\"/kaggle/working/correlation_heatmap.png\")  # Save the heatmap as PNG\n",
    "plt.close()  # Close the plot to avoid display in the notebook\n",
    "\n",
    "# Export the correlation matrix to an Excel file with embedded image\n",
    "excel_file_path = \"/kaggle/working/correlation_with_embedded_heatmap.xlsx\"\n",
    "with pd.ExcelWriter(excel_file_path, engine='xlsxwriter') as writer:\n",
    "    # Write the correlation matrix to the Excel worksheet\n",
    "    corr_matrix.to_excel(writer, sheet_name='Correlation Matrix')\n",
    "\n",
    "    # Get the xlsxwriter workbook and worksheet objects\n",
    "    workbook = writer.book\n",
    "    worksheet = writer.sheets['Correlation Matrix']\n",
    "\n",
    "    # Insert the heatmap image into the worksheet\n",
    "    worksheet.insert_image('A10', '/kaggle/working/correlation_heatmap.png')\n",
    "\n",
    "# Verify the files created\n",
    "print(\"Contents of /kaggle/working directory:\")\n",
    "print(os.listdir(\"/kaggle/working\"))\n",
    "\n",
    "# Check if the file was created successfully\n",
    "if os.path.isfile(excel_file_path):\n",
    "    print(f\"File created successfully: {excel_file_path}\")\n",
    "else:\n",
    "    print(\"File creation failed.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "5512a368",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:34:16.269374Z",
     "iopub.status.busy": "2024-05-27T16:34:16.268198Z",
     "iopub.status.idle": "2024-05-27T16:34:16.993131Z",
     "shell.execute_reply": "2024-05-27T16:34:16.992079Z"
    },
    "papermill": {
     "duration": 0.734253,
     "end_time": "2024-05-27T16:34:16.995406",
     "exception": false,
     "start_time": "2024-05-27T16:34:16.261153",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Contents of /kaggle/working directory:\n",
      "['correlation_heatmap.png', 'correlation_with_embedded_heatmap.xlsx', 'correlation_heatmap_1.png', 'correlation_matrix_1_with_heatmap.xlsx', '__notebook__.ipynb']\n",
      "File created successfully: /kaggle/working/correlation_matrix_1_with_heatmap.xlsx\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "# Define the columns for correlation analysis\n",
    "cols_for_corr = df.columns[df.columns.get_loc('01 Explores Broadly and Innovates') : \n",
    "                           df.columns.get_loc('10 Demonstrates resilience and adaptability') + 1]\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Include 'Wellness Used' column in the correlation analysis\n",
    "cols_for_corr = ['Wellness Used'] + list(cols_for_corr)\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Plot the correlation matrix using a heatmap\n",
    "plt.figure(figsize=(14, 12))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
    "plt.title('Correlation Matrix of Wellness Use and Other Variables')\n",
    "heatmap_figure_path = \"/kaggle/working/correlation_heatmap_1.png\"\n",
    "plt.savefig(heatmap_figure_path)\n",
    "plt.close()  # Close the plot to avoid display in the notebook\n",
    "\n",
    "# Define the file path for the Excel file\n",
    "excel_file_path = \"/kaggle/working/correlation_matrix_1_with_heatmap.xlsx\"\n",
    "\n",
    "# Export the correlation matrix to an Excel file with embedded heatmap\n",
    "with pd.ExcelWriter(excel_file_path, engine='xlsxwriter') as writer:\n",
    "    # Write the correlation matrix to the Excel worksheet\n",
    "    corr_matrix.to_excel(writer, sheet_name='Correlation Matrix')\n",
    "\n",
    "    # Get the xlsxwriter workbook and worksheet objects\n",
    "    workbook = writer.book\n",
    "    worksheet = writer.sheets['Correlation Matrix']\n",
    "\n",
    "    # Insert the heatmap image into the worksheet\n",
    "    worksheet.insert_image('A10', heatmap_figure_path)\n",
    "\n",
    "# Verify the files created\n",
    "print(\"Contents of /kaggle/working directory:\")\n",
    "print(os.listdir(\"/kaggle/working\"))\n",
    "\n",
    "# Check if the file was created successfully\n",
    "if os.path.isfile(excel_file_path):\n",
    "    print(f\"File created successfully: {excel_file_path}\")\n",
    "else:\n",
    "    print(\"File creation failed.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0048439a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-05-27T16:02:08.575047Z",
     "iopub.status.busy": "2024-05-27T16:02:08.574689Z",
     "iopub.status.idle": "2024-05-27T16:02:09.083189Z",
     "shell.execute_reply": "2024-05-27T16:02:09.081922Z",
     "shell.execute_reply.started": "2024-05-27T16:02:08.575018Z"
    },
    "papermill": {
     "duration": 0.005454,
     "end_time": "2024-05-27T16:34:17.006643",
     "exception": false,
     "start_time": "2024-05-27T16:34:17.001189",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Define the columns for correlation analysis\n",
    "cols_for_corr = ['Wellness Used', 'Flight Risk', 'Loss Impact', 'Talent Assessment', \n",
    "                 '2023 Performance Rating', 'Direct Reports']\n",
    "\n",
    "# Calculate the correlation matrix\n",
    "corr_matrix = df[cols_for_corr].corr()\n",
    "\n",
    "# Plot the correlation matrix using a heatmap\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
    "plt.title('Correlation Matrix of Wellness Use and Selected Variables')\n",
    "plt.show()\n",
    "\n",
    "print(\"Correlation Matrix:\")\n",
    "print(corr_matrix)\n",
    "\n",
    "# Export the correlation matrix to an Excel file\n",
    "corr_matrix.to_excel(\"/kaggle/working/correlation_matrix_2.xlsx\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4974631,
     "sourceId": 8368321,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30698,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 22.377193,
   "end_time": "2024-05-27T16:34:17.634685",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-05-27T16:33:55.257492",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
